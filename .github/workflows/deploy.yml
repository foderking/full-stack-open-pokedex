
name: Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

   

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: 'deploy to heroku'
        if: github.event_name == 'push' && !contains(join(toJson(github.event.commits.*.message)), '#skip')
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "polar-harbor-58989" #Must be unique in Heroku
          heroku_email: "jomilojuajibola@gmail.com"
          healthcheck: "https://polar-harbor-58989.herokuapp.com/health"
          checkstring: "ok"
          rollbackonhealthcheckfailed: true

  tag_new_version:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      # - uses: actions/setup-node@v1
        # with:
          # node-version: "12.x"
      - name: Bump version and push tag
        if: github.event_name == 'push' && !contains(join(toJson(github.event.commits.*.message)), '#skip')
        uses: anothrNick/github-tag-action@eca2b69f9e2c24be7decccd0f15fdb1ea5906598
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

  health:
    runs-on: ubuntu-20.04
    steps:
    - name: Check the deployed service URL
      uses: jtalk/url-health-check-action@v2
      with:
        # Check the following URLs one by one sequentially
        url: https://polar-harbor-58989.herokuapp.com/health
        # Follow redirects, or just report success on 3xx status codes
        follow-redirect: no # Optional, defaults to "no"
        # Fail this action after this many failed attempts
        max-attempts: 2 # Optional, defaults to 1
        # Delay between retries
        retry-delay: 5s # Optional, only applicable to max-attempts > 1
        # Retry all errors, including 404. This option might trigger curl upgrade.
        retry-all: no # Optional, defaults to "no"

  # a_test_job:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: gihub context
  #       env:
  #         GITHUB_CONTEXT: ${{ toJson(github) }}
  #       run: echo "$GITHUB_CONTEXT"
  #     - name: commits
  #       env:
  #         COMMITS: ${{ toJson(github.event.commits) }}
  #       run: echo "$COMMITS"
  #     - name: commit messages
  #       env:
  #         COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
  #       run: echo "$COMMIT_MESSAGES"